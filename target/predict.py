# -*- coding: utf-8 -*-
"""Predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1so846O5qDOyE4t_yoHuw0e88GvwToEdQ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import sys

# dataset = pd.read_csv("drug200.csv");
dataset_file = sys.argv[1]

age         = int(sys.argv[2])
sex         = int(sys.argv[3])
bp          = int(sys.argv[4])
cholesterol = int(sys.argv[5])
na_to_k     = int(sys.argv[6])


dataset =pd.read_csv(dataset_file)

# Merubah String menjadi INT dengan Label Encoder
from sklearn import preprocessing
label_encoder = preprocessing.LabelEncoder()
dataset['Sex'] = label_encoder.fit_transform(dataset['Sex'])
dataset['Sex'].unique()

# Merubah String menjadi INT dengan Fungsi Encode
def encode(dataset):
  if dataset == 'LOW':
    return 0
  elif dataset == 'NORMAL':
    return 1
  else :
    return 2

dataset['BP'] = dataset['BP'].apply(encode)

from sklearn import preprocessing
label_encoder = preprocessing.LabelEncoder()
dataset['Cholesterol'] = label_encoder.fit_transform(dataset['Cholesterol'])
dataset['Cholesterol'].unique()

dataset['Drug'].replace({'DrugY':0,'drugX':1,'drugC':2, 'drugA':3, 'drugB':4},inplace=True)

X = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=0)

# from sklearn.preprocessing import StandardScaler
# sc = StandardScaler()
# X_train = sc.fit_transform(X_train)
# X_test  = sc.fit_transform(X_test)

from sklearn.tree import DecisionTreeClassifier
classifier = DecisionTreeClassifier(criterion='entropy', random_state=0)
classifier.fit(X_train,y_train)

print(classifier.predict([[age, sex, bp, cholesterol, na_to_k]])[0])

input_data = age,	sex,	bp,	cholesterol,	na_to_k
id_np_array = np.asarray(input_data)
id_reshaped = id_np_array.reshape(1,-1)
predict = classifier.predict(id_reshaped)

if(predict[0]==0):
    print("Predict Drug Nya Adalah : Drug Y")
elif(predict[0]==1):
    print("Predict Drug Nya Adalah : Drug X")
elif(predict[0]==2):
    print("Predict Drug Nya Adalah : Drug C")
elif(predict[0]==3):
    print("Predict Drug Nya Adalah : Drug A")
else:
    print("Predict Drug Nya Adalah : Drug B")

# prediksi = classifier.predict([[23, 0, 2, 0, 30]])[0]
# print(prediksi)